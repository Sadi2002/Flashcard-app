// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"3yPwA":[function(require,module,exports) {
var global = arguments[3];
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SECURE = false;
var HMR_ENV_HASH = "d6ea1d42532a7575";
module.bundle.HMR_BUNDLE_ID = "b3c595598cfc62b9";
"use strict";
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: {|[string]: mixed|};
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
    getURL(url: string): string;
    getManifest(): {manifest_version: number, ...};
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
declare var __parcel__import__: (string) => Promise<void>;
declare var __parcel__importScripts__: (string) => Promise<void>;
declare var globalThis: typeof self;
declare var ServiceWorkerGlobalScope: Object;
*/ var OVERLAY_ID = "__parcel__error__overlay__";
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData[moduleName],
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData[moduleName] = undefined;
}
module.bundle.Module = Module;
module.bundle.hotData = {};
var checkedAssets /*: {|[string]: boolean|} */ , assetsToDispose /*: Array<[ParcelRequire, string]> */ , assetsToAccept /*: Array<[ParcelRequire, string]> */ ;
function getHostname() {
    return HMR_HOST || (location.protocol.indexOf("http") === 0 ? location.hostname : "localhost");
}
function getPort() {
    return HMR_PORT || location.port;
}
// eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== "undefined") {
    var hostname = getHostname();
    var port = getPort();
    var protocol = HMR_SECURE || location.protocol == "https:" && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? "wss" : "ws";
    var ws;
    try {
        ws = new WebSocket(protocol + "://" + hostname + (port ? ":" + port : "") + "/");
    } catch (err) {
        if (err.message) console.error(err.message);
        ws = {};
    }
    // Web extension context
    var extCtx = typeof browser === "undefined" ? typeof chrome === "undefined" ? null : chrome : browser;
    // Safari doesn't support sourceURL in error stacks.
    // eval may also be disabled via CSP, so do a quick check.
    var supportsSourceURL = false;
    try {
        (0, eval)('throw new Error("test"); //# sourceURL=test.js');
    } catch (err) {
        supportsSourceURL = err.stack.includes("test.js");
    }
    // $FlowFixMe
    ws.onmessage = async function(event /*: {data: string, ...} */ ) {
        checkedAssets = {} /*: {|[string]: boolean|} */ ;
        assetsToAccept = [];
        assetsToDispose = [];
        var data /*: HMRMessage */  = JSON.parse(event.data);
        if (data.type === "update") {
            // Remove error overlay if there is one
            if (typeof document !== "undefined") removeErrorOverlay();
            let assets = data.assets.filter((asset)=>asset.envHash === HMR_ENV_HASH);
            // Handle HMR Update
            let handled = assets.every((asset)=>{
                return asset.type === "css" || asset.type === "js" && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
            });
            if (handled) {
                console.clear();
                // Dispatch custom event so other runtimes (e.g React Refresh) are aware.
                if (typeof window !== "undefined" && typeof CustomEvent !== "undefined") window.dispatchEvent(new CustomEvent("parcelhmraccept"));
                await hmrApplyUpdates(assets);
                // Dispose all old assets.
                let processedAssets = {} /*: {|[string]: boolean|} */ ;
                for(let i = 0; i < assetsToDispose.length; i++){
                    let id = assetsToDispose[i][1];
                    if (!processedAssets[id]) {
                        hmrDispose(assetsToDispose[i][0], id);
                        processedAssets[id] = true;
                    }
                }
                // Run accept callbacks. This will also re-execute other disposed assets in topological order.
                processedAssets = {};
                for(let i = 0; i < assetsToAccept.length; i++){
                    let id = assetsToAccept[i][1];
                    if (!processedAssets[id]) {
                        hmrAccept(assetsToAccept[i][0], id);
                        processedAssets[id] = true;
                    }
                }
            } else fullReload();
        }
        if (data.type === "error") {
            // Log parcel errors to console
            for (let ansiDiagnostic of data.diagnostics.ansi){
                let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
                console.error("\uD83D\uDEA8 [parcel]: " + ansiDiagnostic.message + "\n" + stack + "\n\n" + ansiDiagnostic.hints.join("\n"));
            }
            if (typeof document !== "undefined") {
                // Render the fancy html overlay
                removeErrorOverlay();
                var overlay = createErrorOverlay(data.diagnostics.html);
                // $FlowFixMe
                document.body.appendChild(overlay);
            }
        }
    };
    ws.onerror = function(e) {
        if (e.message) console.error(e.message);
    };
    ws.onclose = function() {
        console.warn("[parcel] \uD83D\uDEA8 Connection to the HMR server was lost");
    };
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log("[parcel] \u2728 Error resolved");
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement("div");
    overlay.id = OVERLAY_ID;
    let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    for (let diagnostic of diagnostics){
        let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{
            return `${p}
<a href="/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}" style="text-decoration: underline; color: #888" onclick="fetch(this.href); return false">${frame.location}</a>
${frame.code}`;
        }, "") : diagnostic.stack;
        errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          \u{1F6A8} ${diagnostic.message}
        </div>
        <pre>${stack}</pre>
        <div>
          ${diagnostic.hints.map((hint)=>"<div>\uD83D\uDCA1 " + hint + "</div>").join("")}
        </div>
        ${diagnostic.documentation ? `<div>\u{1F4DD} <a style="color: violet" href="${diagnostic.documentation}" target="_blank">Learn more</a></div>` : ""}
      </div>
    `;
    }
    errorHTML += "</div>";
    overlay.innerHTML = errorHTML;
    return overlay;
}
function fullReload() {
    if ("reload" in location) location.reload();
    else if (extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var href = link.getAttribute("href");
    if (!href) return;
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute("href", // $FlowFixMe
    href.split("?")[0] + "?" + Date.now());
    // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout) return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href /*: string */  = links[i].getAttribute("href");
            var hostname = getHostname();
            var servedFromHMRServer = hostname === "localhost" ? new RegExp("^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):" + getPort()).test(href) : href.indexOf(hostname + ":" + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrDownload(asset) {
    if (asset.type === "js") {
        if (typeof document !== "undefined") {
            let script = document.createElement("script");
            script.src = asset.url + "?t=" + Date.now();
            if (asset.outputFormat === "esmodule") script.type = "module";
            return new Promise((resolve, reject)=>{
                var _document$head;
                script.onload = ()=>resolve(script);
                script.onerror = reject;
                (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);
            });
        } else if (typeof importScripts === "function") {
            // Worker scripts
            if (asset.outputFormat === "esmodule") return import(asset.url + "?t=" + Date.now());
            else return new Promise((resolve, reject)=>{
                try {
                    importScripts(asset.url + "?t=" + Date.now());
                    resolve();
                } catch (err) {
                    reject(err);
                }
            });
        }
    }
}
async function hmrApplyUpdates(assets) {
    global.parcelHotUpdate = Object.create(null);
    let scriptsToRemove;
    try {
        // If sourceURL comments aren't supported in eval, we need to load
        // the update from the dev server over HTTP so that stack traces
        // are correct in errors/logs. This is much slower than eval, so
        // we only do it if needed (currently just Safari).
        // https://bugs.webkit.org/show_bug.cgi?id=137297
        // This path is also taken if a CSP disallows eval.
        if (!supportsSourceURL) {
            let promises = assets.map((asset)=>{
                var _hmrDownload;
                return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{
                    // Web extension fix
                    if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != "undefined" && global instanceof ServiceWorkerGlobalScope) {
                        extCtx.runtime.reload();
                        return;
                    }
                    throw err;
                });
            });
            scriptsToRemove = await Promise.all(promises);
        }
        assets.forEach(function(asset) {
            hmrApply(module.bundle.root, asset);
        });
    } finally{
        delete global.parcelHotUpdate;
        if (scriptsToRemove) scriptsToRemove.forEach((script)=>{
            if (script) {
                var _document$head2;
                (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);
            }
        });
    }
}
function hmrApply(bundle /*: ParcelRequire */ , asset /*:  HMRAsset */ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === "css") reloadCSS();
    else if (asset.type === "js") {
        let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                let oldDeps = modules[asset.id][1];
                for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    let id = oldDeps[dep];
                    let parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            if (supportsSourceURL) // Global eval. We would use `new Function` here but browser
            // support for source maps is better with eval.
            (0, eval)(asset.output);
            // $FlowFixMe
            let fn = global.parcelHotUpdate[asset.id];
            modules[asset.id] = [
                fn,
                deps
            ];
        } else if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id) {
    let modules = bundle.modules;
    if (!modules) return;
    if (modules[id]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        let deps = modules[id][1];
        let orphans = [];
        for(let dep in deps){
            let parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        }
        // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id];
        delete bundle.cache[id];
        // Now delete the orphans.
        orphans.forEach((id)=>{
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id);
}
function hmrAcceptCheck(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
    // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    let parents = getParents(module.bundle.root, id);
    let accepted = false;
    while(parents.length > 0){
        let v = parents.shift();
        let a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else {
            // Otherwise, queue the parents in the next level upward.
            let p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push(...p);
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) return true;
        return hmrAcceptCheck(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return true;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    assetsToDispose.push([
        bundle,
        id
    ]);
    if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {
        assetsToAccept.push([
            bundle,
            id
        ]);
        return true;
    }
}
function hmrDispose(bundle /*: ParcelRequire */ , id /*: string */ ) {
    var cached = bundle.cache[id];
    bundle.hotData[id] = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData[id];
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData[id]);
    });
    delete bundle.cache[id];
}
function hmrAccept(bundle /*: ParcelRequire */ , id /*: string */ ) {
    // Execute the module.
    bundle(id);
    // Run the accept callbacks in the new version of the module.
    var cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {
        var assetsToAlsoAccept = cb(function() {
            return getParents(module.bundle.root, id);
        });
        if (assetsToAlsoAccept && assetsToAccept.length) {
            assetsToAlsoAccept.forEach(function(a) {
                hmrDispose(a[0], a[1]);
            });
            // $FlowFixMe[method-unbinding]
            assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
        }
    });
}

},{}],"6rimH":[function(require,module,exports) {
// Importing
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _indexMinJs = require("./node_modules/translate/index.min.js");
var _indexMinJsDefault = parcelHelpers.interopDefault(_indexMinJs);
var _wordsJs = require("./node_modules/popular-english-words/words.js");
// Fetching elements
const lookTranslateBtn = document.querySelector(".eye");
const card = document.querySelector(".card");
const thumbUpBtn = document.querySelector(".thumb-up");
const thumbDownBtn = document.querySelector(".thumb-down");
const navCounter = document.querySelector(".navigation__counter--color");
const currentState = document.querySelector(".current-state");
const unknownContainer = document.querySelector(".container-unknown");
const unknownBtn = document.querySelector(".unknown-btn");
const unknownBoxBtn = document.querySelector(".unknown-data");
const backToWords = document.querySelector(".container-unknown__back");
const controlsBox = document.querySelectorAll(".controls__box");
const startBtn = document.querySelector(".controls__start");
const knownCount = document.querySelector(".current-state__counter--known");
const unknownCount = document.querySelector(".current-state__counter--unknown");
const unknownWordsTitle = document.querySelector(".container-unknown__nav-counter--text");
const unknownList = document.querySelector(".container-unknown__list");
// Global scope variables
let currentWord = "";
let counter = 0;
let knownCounter = 0;
let unknownCounter = 0;
const speakerIcon = document.createElement("i");
speakerIcon.classList.add("fas", "fa-volume-up");
navCounter.textContent = counter;
knownCount.textContent = knownCounter;
unknownCount.textContent = unknownCounter;
const createUnknownList = function(word, engWord) {
    const html = `<p><span>${engWord} - ${word}</span></p>`;
    unknownList.insertAdjacentHTML("beforeend", html);
};
// Set which handling every word which user doesn't know
const unknownArray = new Set();
// Function which runs only once
const showAnimationOnce = function() {
    thumbDownBtn.style.left = "30px";
    thumbDownBtn.style.transform = "translate(2px, 0)";
    thumbUpBtn.style.left = "calc(100% - 65px)";
    thumbUpBtn.style.transform = "translateX(2px, 0px)";
    controlsBox.forEach((box)=>box.style.opacity = 1);
    startBtn.style.opacity = 0;
    startBtn.style.visibility = "hidden";
    unknownBoxBtn.style.opacity = 1;
    unknownBoxBtn.style.visibility = "visible";
    currentState.style.opacity = 1;
    currentState.style.visibility = "visible";
};
// Function to create a card frame
const createCard = function(pol, eng) {
    card.textContent = "";
    const html = `
    <div class="front-card">
      <div class="card__title--front">${pol}</div>
    </div>
    <div class="back-card">
      <div class="card__title--front">${eng}</div>
    </div>
  `;
    card.insertAdjacentHTML("beforeend", html);
    const backCard = document.querySelector(".back-card");
    backCard.insertAdjacentElement("beforeend", speakerIcon);
};
// Function to get a random word from the array
const getRandomWord = ()=>(0, _wordsJs.words)[Math.floor(Math.random() * (0, _wordsJs.words).length)];
// Function to capitalize the first letter of a word
const capitalizeFirstLetter = (word)=>word.charAt(0).toUpperCase() + word.slice(1);
// Function to translate and create a card
const translateAndCreateCard = async ()=>{
    const randomEngWord = getRandomWord();
    currentWord = randomEngWord;
    const capitalizedWord = capitalizeFirstLetter(randomEngWord);
    const translatedWord = await (0, _indexMinJsDefault.default)(capitalizedWord, "pl");
    createCard(translatedWord, capitalizedWord);
};
// Function to handle thumb up click
const handleThumbUp = ()=>{
    knownCounter++;
    counter++;
    navCounter.textContent = counter;
    knownCount.textContent = knownCounter;
    translateAndCreateCard();
    if (card.classList.contains("rotate")) card.classList.remove("rotate");
};
// Function to handle thumb down click
const handleThumbDown = ()=>{
    unknownCounter++;
    counter++;
    navCounter.textContent = counter;
    unknownCount.textContent = unknownCounter;
    const translateAndCreateCard = async ()=>{
        let convertSetToArray = [
            ...unknownArray
        ];
        const translateUnknownWord = await (0, _indexMinJsDefault.default)(currentWord, "pl");
        convertSetToArray.push(currentWord, translateUnknownWord);
        createUnknownList(capitalizeFirstLetter(convertSetToArray[0]), capitalizeFirstLetter(convertSetToArray[1]));
        const randomEngWord = getRandomWord();
        currentWord = randomEngWord;
        const capitalizedWord = capitalizeFirstLetter(randomEngWord);
        const translatedWord = await (0, _indexMinJsDefault.default)(capitalizedWord, "pl");
        createCard(translatedWord, capitalizedWord);
    };
    translateAndCreateCard();
    if (card.classList.contains("rotate")) card.classList.remove("rotate");
};
startBtn.addEventListener("click", function() {
    showAnimationOnce();
    counter++;
    navCounter.textContent = counter;
    translateAndCreateCard();
});
lookTranslateBtn.addEventListener("click", function() {
    card.classList.toggle("rotate");
});
thumbUpBtn.addEventListener("click", handleThumbUp);
thumbDownBtn.addEventListener("click", handleThumbDown);
unknownBtn.addEventListener("click", function() {
    unknownContainer.style.opacity = 1;
    unknownContainer.style.visibility = "visible";
    setTimeout(()=>{
        if (card.classList.contains("rotate")) card.classList.remove("rotate");
    }, 500);
    if (unknownList.childElementCount == 0) unknownWordsTitle.textContent = "Brawo! Wszystko wiesz.";
    else unknownWordsTitle.textContent = `Ilo\u{15B}\u{107} s\u{142}\xf3w do powt\xf3rzenia: ${unknownList.childElementCount}`;
});
backToWords.addEventListener("click", function() {
    unknownContainer.style.opacity = 0;
    unknownContainer.style.visibility = "hidden";
});
let speech = new SpeechSynthesisUtterance();
speakerIcon.addEventListener("click", function() {
    speech.lang = "en-GB";
    speech.text = currentWord;
    window.speechSynthesis.speak(speech);
});
if (module.hot) module.hot.accept();

},{"./node_modules/translate/index.min.js":"alSBO","./node_modules/popular-english-words/words.js":"3E4oA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"alSBO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>exp);
var iso = {
    aar: "aa",
    abk: "ab",
    afr: "af",
    aka: "ak",
    alb: "sq",
    amh: "am",
    ara: "ar",
    arg: "an",
    arm: "hy",
    asm: "as",
    ava: "av",
    ave: "ae",
    aym: "ay",
    aze: "az",
    bak: "ba",
    bam: "bm",
    baq: "eu",
    bel: "be",
    ben: "bn",
    bih: "bh",
    bis: "bi",
    bos: "bs",
    bre: "br",
    bul: "bg",
    bur: "my",
    cat: "ca",
    cha: "ch",
    che: "ce",
    chi: "zh",
    chu: "cu",
    chv: "cv",
    cor: "kw",
    cos: "co",
    cre: "cr",
    cze: "cs",
    dan: "da",
    div: "dv",
    dut: "nl",
    dzo: "dz",
    eng: "en",
    epo: "eo",
    est: "et",
    ewe: "ee",
    fao: "fo",
    fij: "fj",
    fin: "fi",
    fre: "fr",
    fry: "fy",
    ful: "ff",
    geo: "ka",
    ger: "de",
    gla: "gd",
    gle: "ga",
    glg: "gl",
    glv: "gv",
    gre: "el",
    grn: "gn",
    guj: "gu",
    hat: "ht",
    hau: "ha",
    heb: "he",
    her: "hz",
    hin: "hi",
    hmo: "ho",
    hrv: "hr",
    hun: "hu",
    ibo: "ig",
    ice: "is",
    ido: "io",
    iii: "ii",
    iku: "iu",
    ile: "ie",
    ina: "ia",
    ind: "id",
    ipk: "ik",
    ita: "it",
    jav: "jv",
    jpn: "ja",
    kal: "kl",
    kan: "kn",
    kas: "ks",
    kau: "kr",
    kaz: "kk",
    khm: "km",
    kik: "ki",
    kin: "rw",
    kir: "ky",
    kom: "kv",
    kon: "kg",
    kor: "ko",
    kua: "kj",
    kur: "ku",
    lao: "lo",
    lat: "la",
    lav: "lv",
    lim: "li",
    lin: "ln",
    lit: "lt",
    ltz: "lb",
    lub: "lu",
    lug: "lg",
    mac: "mk",
    mah: "mh",
    mal: "ml",
    mao: "mi",
    mar: "mr",
    may: "ms",
    mlg: "mg",
    mlt: "mt",
    mon: "mn",
    nau: "na",
    nav: "nv",
    nbl: "nr",
    nde: "nd",
    ndo: "ng",
    nep: "ne",
    nno: "nn",
    nob: "nb",
    nor: "no",
    nya: "ny",
    oci: "oc",
    oji: "oj",
    ori: "or",
    orm: "om",
    oss: "os",
    pan: "pa",
    per: "fa",
    pli: "pi",
    pol: "pl",
    por: "pt",
    pus: "ps",
    que: "qu",
    roh: "rm",
    rum: "ro",
    run: "rn",
    rus: "ru",
    sag: "sg",
    san: "sa",
    sin: "si",
    slo: "sk",
    slv: "sl",
    sme: "se",
    smo: "sm",
    sna: "sn",
    snd: "sd",
    som: "so",
    sot: "st",
    spa: "es",
    srd: "sc",
    srp: "sr",
    ssw: "ss",
    sun: "su",
    swa: "sw",
    swe: "sv",
    tah: "ty",
    tam: "ta",
    tat: "tt",
    tel: "te",
    tgk: "tg",
    tgl: "tl",
    tha: "th",
    tib: "bo",
    tir: "ti",
    ton: "to",
    tsn: "tn",
    tso: "ts",
    tuk: "tk",
    tur: "tr",
    twi: "tw",
    uig: "ug",
    ukr: "uk",
    urd: "ur",
    uzb: "uz",
    ven: "ve",
    vie: "vi",
    vol: "vo",
    wel: "cy",
    wln: "wa",
    wol: "wo",
    xho: "xh",
    yid: "yi",
    yor: "yo",
    zha: "za",
    zul: "zu"
}, names = {
    afar: "aa",
    abkhazian: "ab",
    afrikaans: "af",
    akan: "ak",
    albanian: "sq",
    amharic: "am",
    arabic: "ar",
    aragonese: "an",
    armenian: "hy",
    assamese: "as",
    avaric: "av",
    avestan: "ae",
    aymara: "ay",
    azerbaijani: "az",
    bashkir: "ba",
    bambara: "bm",
    basque: "eu",
    belarusian: "be",
    bengali: "bn",
    "bihari languages": "bh",
    bislama: "bi",
    tibetan: "bo",
    bosnian: "bs",
    breton: "br",
    bulgarian: "bg",
    burmese: "my",
    catalan: "ca",
    valencian: "ca",
    czech: "cs",
    chamorro: "ch",
    chechen: "ce",
    chinese: "zh",
    "church slavic": "cu",
    "old slavonic": "cu",
    "church slavonic": "cu",
    "old bulgarian": "cu",
    "old church slavonic": "cu",
    chuvash: "cv",
    cornish: "kw",
    corsican: "co",
    cree: "cr",
    welsh: "cy",
    danish: "da",
    german: "de",
    divehi: "dv",
    dhivehi: "dv",
    maldivian: "dv",
    dutch: "nl",
    flemish: "nl",
    dzongkha: "dz",
    greek: "el",
    english: "en",
    esperanto: "eo",
    estonian: "et",
    ewe: "ee",
    faroese: "fo",
    persian: "fa",
    fijian: "fj",
    finnish: "fi",
    french: "fr",
    "western frisian": "fy",
    fulah: "ff",
    georgian: "ka",
    gaelic: "gd",
    "scottish gaelic": "gd",
    irish: "ga",
    galician: "gl",
    manx: "gv",
    guarani: "gn",
    gujarati: "gu",
    haitian: "ht",
    "haitian creole": "ht",
    hausa: "ha",
    hebrew: "he",
    herero: "hz",
    hindi: "hi",
    "hiri motu": "ho",
    croatian: "hr",
    hungarian: "hu",
    igbo: "ig",
    icelandic: "is",
    ido: "io",
    "sichuan yi": "ii",
    nuosu: "ii",
    inuktitut: "iu",
    interlingue: "ie",
    occidental: "ie",
    interlingua: "ia",
    indonesian: "id",
    inupiaq: "ik",
    italian: "it",
    javanese: "jv",
    japanese: "ja",
    kalaallisut: "kl",
    greenlandic: "kl",
    kannada: "kn",
    kashmiri: "ks",
    kanuri: "kr",
    kazakh: "kk",
    "central khmer": "km",
    kikuyu: "ki",
    gikuyu: "ki",
    kinyarwanda: "rw",
    kirghiz: "ky",
    kyrgyz: "ky",
    komi: "kv",
    kongo: "kg",
    korean: "ko",
    kuanyama: "kj",
    kwanyama: "kj",
    kurdish: "ku",
    lao: "lo",
    latin: "la",
    latvian: "lv",
    limburgan: "li",
    limburger: "li",
    limburgish: "li",
    lingala: "ln",
    lithuanian: "lt",
    luxembourgish: "lb",
    letzeburgesch: "lb",
    "luba-katanga": "lu",
    ganda: "lg",
    macedonian: "mk",
    marshallese: "mh",
    malayalam: "ml",
    maori: "mi",
    marathi: "mr",
    malay: "ms",
    malagasy: "mg",
    maltese: "mt",
    mongolian: "mn",
    nauru: "na",
    navajo: "nv",
    navaho: "nv",
    "ndebele, south": "nr",
    "south ndebele": "nr",
    "ndebele, north": "nd",
    "north ndebele": "nd",
    ndonga: "ng",
    nepali: "ne",
    "norwegian nynorsk": "nn",
    "nynorsk, norwegian": "nn",
    "norwegian bokm\xe5l": "nb",
    "bokm\xe5l, norwegian": "nb",
    norwegian: "no",
    chichewa: "ny",
    chewa: "ny",
    nyanja: "ny",
    occitan: "oc",
    ojibwa: "oj",
    oriya: "or",
    oromo: "om",
    ossetian: "os",
    ossetic: "os",
    panjabi: "pa",
    punjabi: "pa",
    pali: "pi",
    polish: "pl",
    portuguese: "pt",
    pushto: "ps",
    pashto: "ps",
    quechua: "qu",
    romansh: "rm",
    romanian: "ro",
    moldavian: "ro",
    moldovan: "ro",
    rundi: "rn",
    russian: "ru",
    sango: "sg",
    sanskrit: "sa",
    sinhala: "si",
    sinhalese: "si",
    slovak: "sk",
    slovenian: "sl",
    "northern sami": "se",
    samoan: "sm",
    shona: "sn",
    sindhi: "sd",
    somali: "so",
    "sotho, southern": "st",
    spanish: "es",
    castilian: "es",
    sardinian: "sc",
    serbian: "sr",
    swati: "ss",
    sundanese: "su",
    swahili: "sw",
    swedish: "sv",
    tahitian: "ty",
    tamil: "ta",
    tatar: "tt",
    telugu: "te",
    tajik: "tg",
    tagalog: "tl",
    thai: "th",
    tigrinya: "ti",
    tonga: "to",
    tswana: "tn",
    tsonga: "ts",
    turkmen: "tk",
    turkish: "tr",
    twi: "tw",
    uighur: "ug",
    uyghur: "ug",
    ukrainian: "uk",
    urdu: "ur",
    uzbek: "uz",
    venda: "ve",
    vietnamese: "vi",
    "volap\xfck": "vo",
    walloon: "wa",
    wolof: "wo",
    xhosa: "xh",
    yiddish: "yi",
    yoruba: "yo",
    zhuang: "za",
    chuang: "za",
    zulu: "zu"
};
const isoKeys = Object.values(iso).sort();
var languages = (e)=>{
    if ("string" != typeof e) throw new Error('The "language" must be a string, received ' + typeof e);
    if (e.length > 100) throw new Error(`The "language" is too long at ${e.length} characters`);
    if (e = e.toLowerCase(), e = names[e] || iso[e] || e, !isoKeys.includes(e)) throw new Error(`The language "${e}" is not part of the ISO 639-1`);
    return e;
};
function Cache() {
    var e = Object.create(null);
    function a(a) {
        delete e[a];
    }
    this.set = function(n, i, r) {
        if (void 0 !== r && ("number" != typeof r || isNaN(r) || r <= 0)) throw new Error("Cache timeout must be a positive number");
        var t = e[n];
        t && clearTimeout(t.timeout);
        var o = {
            value: i,
            expire: r + Date.now()
        };
        return isNaN(o.expire) || (o.timeout = setTimeout(()=>a(n), r)), e[n] = o, i;
    }, this.del = function(n) {
        var i = !0, r = e[n];
        return r ? (clearTimeout(r.timeout), !isNaN(r.expire) && r.expire < Date.now() && (i = !1)) : i = !1, i && a(n), i;
    }, this.clear = function() {
        for(var a in e)clearTimeout(e[a].timeout);
        e = Object.create(null);
    }, this.get = function(a) {
        var n = e[a];
        if (void 0 !== n) {
            if (isNaN(n.expire) || n.expire >= Date.now()) return n.value;
            delete e[a];
        }
        return null;
    };
}
const exp$1 = new Cache;
exp$1.Cache = Cache;
const base = "https://translate.googleapis.com/translate_a/single";
var google = {
    fetch: ({ key: e, from: a, to: n, text: i })=>[
            `${base}?client=gtx&sl=${a}&tl=${n}&dt=t&q=${encodeURI(i)}`
        ],
    parse: (e)=>e.json().then((e)=>{
            if (!(e = e && e[0] && e[0][0] && e[0].map((e)=>e[0]).join(""))) throw new Error("Translation not found");
            return e;
        })
}, yandex = {
    needkey: !0,
    fetch: ({ key: e, from: a, to: n, text: i })=>[
            `https://translate.yandex.net/api/v1.5/tr.json/translate?key=${e}&lang=${a}-${n}&text=${encodeURIComponent(i)}`,
            {
                method: "POST",
                body: ""
            }
        ],
    parse: (e)=>e.json().then((e)=>{
            if (200 !== e.code) throw new Error(e.message);
            return e.text[0];
        })
};
const libreUrl = "https://libretranslate.com/translate";
var libre = {
    needkey: !1,
    fetch: ({ url: e = libreUrl, key: a, from: n, to: i, text: r })=>[
            e,
            {
                method: "POST",
                body: JSON.stringify({
                    q: r,
                    source: n,
                    target: i,
                    api_key: a
                }),
                headers: {
                    "Content-Type": "application/json"
                }
            }
        ],
    parse: (e)=>e.json().then((e)=>{
            if (!e) throw new Error("No response found");
            if (e.error) throw new Error(e.error);
            if (!e.translatedText) throw new Error("No response found");
            return e.translatedText;
        })
}, deepl = {
    needkey: !0,
    fetch: ({ key: e, from: a, to: n, text: i })=>[
            `https://api${/:fx$/.test(e) ? "-free" : ""}.deepl.com/v2/translate?auth_key=${e}&source_lang=${a}&target_lang=${n}&text=${i = encodeURIComponent(i)}`,
            {
                method: "POST",
                body: ""
            }
        ],
    parse: async (e)=>{
        if (!e.ok) {
            if (403 === e.status) throw new Error("Auth Error, please review the key for DeepL");
            throw new Error(`Error ${e.status}`);
        }
        return e.json().then((e)=>e.translations[0].text);
    }
}, engines = {
    google: google,
    yandex: yandex,
    libre: libre,
    deepl: deepl
};
const Translate = function(e = {}) {
    if (!(this instanceof Translate)) return new Translate(e);
    const a = {
        from: "en",
        to: "en",
        cache: void 0,
        languages: languages,
        engines: engines,
        engine: "google",
        keys: {}
    }, n = async (e, a = {})=>{
        "string" == typeof a && (a = {
            to: a
        }), a.text = e, a.from = languages(a.from || n.from), a.to = languages(a.to || n.to), a.cache = a.cache || n.cache, a.engines = a.engines || {}, a.engine = a.engine || n.engine, a.url = a.url || n.url, a.id = a.id || `${a.url}:${a.from}:${a.to}:${a.engine}:${a.text}`, a.keys = a.keys || n.keys || {};
        for(let e in n.keys)a.keys[e] = a.keys[e] || n.keys[e];
        a.key = a.key || n.key || a.keys[a.engine];
        const i = a.engines[a.engine] || n.engines[a.engine], r = exp$1.get(a.id);
        if (r) return Promise.resolve(r);
        if (a.to === a.from) return Promise.resolve(a.text);
        if (i.needkey && !a.key) throw new Error(`The engine "${a.engine}" needs a key, please provide it`);
        const t = i.fetch(a);
        return fetch(...t).then(i.parse).then((e)=>exp$1.set(a.id, e, a.cache));
    };
    for(let i in a)n[i] = void 0 === e[i] ? a[i] : e[i];
    return n;
}, exp = new Translate;
exp.Translate = Translate;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gkKU3":[function(require,module,exports) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, "__esModule", {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === "default" || key === "__esModule" || dest.hasOwnProperty(key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"3E4oA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "words", ()=>words);
var words = [
    "a",
    "abandon",
    "abandoned",
    "ability",
    "able",
    "about",
    "above",
    "abroad",
    "absence",
    "absent",
    "absolute",
    "absolutely",
    "absorb",
    "abuse",
    "abuse",
    "academic",
    "accent",
    "accept",
    "acceptable",
    "access",
    "accident",
    "accidental",
    "accidentally",
    "accommodation",
    "accompany",
    "account",
    "accurate",
    "accurately",
    "accuse",
    "achieve",
    "achievement",
    "acid",
    "acknowledge",
    "acquire",
    "across",
    "act",
    "action",
    "active",
    "actively",
    "activity",
    "actor",
    "actress",
    "actual",
    "actually",
    "ad",
    "adapt",
    "add",
    "addition",
    "additional",
    "address",
    "adequate",
    "adequately",
    "adjust",
    "admiration",
    "admire",
    "admit",
    "adopt",
    "adult",
    "advance",
    "advanced",
    "advantage",
    "adventure",
    "advert",
    "advertise",
    "advertisement",
    "advertising",
    "advice",
    "advise",
    "affair",
    "affect",
    "affection",
    "afford",
    "afraid",
    "after",
    "afternoon",
    "afterwards",
    "again",
    "against",
    "age",
    "aged",
    "agency",
    "agent",
    "aggressive",
    "ago",
    "agree",
    "agreement",
    "ahead",
    "aid",
    "aim",
    "air",
    "aircraft",
    "airport",
    "alarm",
    "alarmed",
    "alarming",
    "alcohol",
    "alcoholic",
    "alive",
    "all",
    "allied",
    "allow",
    "ally",
    "ally",
    "almost",
    "alone",
    "along",
    "alongside",
    "aloud",
    "alphabet",
    "alphabetical",
    "alphabetically",
    "already",
    "also",
    "alter",
    "alternative",
    "alternatively",
    "although",
    "altogether",
    "always",
    "a.m.",
    "amaze",
    "amazed",
    "amazing",
    "ambition",
    "ambulance",
    "among",
    "amount",
    "amuse",
    "amused",
    "amusing",
    "analyse",
    "analysis",
    "ancient",
    "and",
    "anger",
    "angle",
    "angrily",
    "angry",
    "animal",
    "ankle",
    "anniversary",
    "announce",
    "annoy",
    "annoyed",
    "annoying",
    "annual",
    "annually",
    "another",
    "answer",
    "anti-",
    "anticipate",
    "anxiety",
    "anxious",
    "anxiously",
    "any",
    "anybody",
    "anyone",
    "anything",
    "anyway",
    "anywhere",
    "apart",
    "apartment",
    "apologize",
    "apparent",
    "apparently",
    "appeal",
    "appear",
    "appearance",
    "apple",
    "application",
    "apply",
    "appoint",
    "appointment",
    "appreciate",
    "approach",
    "appropriate",
    "approval",
    "approve",
    "approving",
    "approximate",
    "approximately",
    "april",
    "area",
    "argue",
    "argument",
    "arise",
    "arm",
    "armed",
    "arms",
    "army",
    "around",
    "arrange",
    "arrangement",
    "arrest",
    "arrival",
    "arrive",
    "art",
    "article",
    "artificial",
    "artificially",
    "artist",
    "artistic",
    "artistically",
    "as",
    "ashamed",
    "aside",
    "ask",
    "asleep",
    "aspect",
    "assist",
    "assistance",
    "assistant",
    "associate",
    "associated",
    "association",
    "assume",
    "assure",
    "at",
    "atmosphere",
    "atom",
    "attach",
    "attached",
    "attack",
    "attempt",
    "attempted",
    "attend",
    "attention",
    "attitude",
    "attorney",
    "attract",
    "attraction",
    "attractive",
    "audience",
    "august",
    "aunt",
    "author",
    "authority",
    "automatic",
    "automatically",
    "autumn",
    "available",
    "average",
    "avoid",
    "awake",
    "award",
    "aware",
    "away",
    "awful",
    "awfully",
    "awkward",
    "awkwardly",
    "baby",
    "back",
    "background",
    "backward",
    "backwards",
    "bacteria",
    "bad",
    "badly",
    "bad-tempered",
    "bag",
    "baggage",
    "bake",
    "balance",
    "ball",
    "ban",
    "band",
    "bandage",
    "bank",
    "bar",
    "bargain",
    "barrier",
    "base",
    "based",
    "basic",
    "basically",
    "basis",
    "bath",
    "bathroom",
    "battery",
    "battle",
    "bay",
    "be",
    "beach",
    "beak",
    "bear",
    "beard",
    "beat",
    "beautiful",
    "beautifully",
    "beauty",
    "because",
    "become",
    "bed",
    "bedroom",
    "beef",
    "beer",
    "before",
    "begin",
    "beginning",
    "behalf",
    "behave",
    "behaviour",
    "behind",
    "belief",
    "believe",
    "bell",
    "belong",
    "below",
    "belt",
    "bend",
    "beneath",
    "benefit",
    "bent",
    "beside",
    "best",
    "bet",
    "better",
    "betting",
    "between",
    "beyond",
    "bicycle",
    "big",
    "bike",
    "bill",
    "billion",
    "bin",
    "biology",
    "bird",
    "birth",
    "birthday",
    "biscuit",
    "bit",
    "bite",
    "bitter",
    "bitterly",
    "black",
    "blade",
    "blame",
    "blank",
    "blind",
    "block",
    "blonde",
    "blood",
    "blow",
    "blue",
    "board",
    "boat",
    "body",
    "boil",
    "bomb",
    "bone",
    "book",
    "boot",
    "border",
    "bore",
    "bored",
    "boring",
    "born",
    "boss",
    "both",
    "bother",
    "bottle",
    "bottom",
    "bound",
    "bowl",
    "box",
    "boy",
    "boyfriend",
    "brain",
    "branch",
    "brand",
    "brave",
    "bread",
    "break",
    "breakfast",
    "breast",
    "breath",
    "breathe",
    "breathing",
    "breed",
    "brick",
    "bridge",
    "brief",
    "briefly",
    "bright",
    "brightly",
    "brilliant",
    "bring",
    "broad",
    "broadcast",
    "broadly",
    "broken",
    "brother",
    "brush",
    "bubble",
    "budget",
    "build",
    "building",
    "bullet",
    "bunch",
    "burn",
    "burnt",
    "burst",
    "bury",
    "bus",
    "bush",
    "business",
    "businessman",
    "busy",
    "but",
    "butter",
    "button",
    "buy",
    "buyer",
    "by",
    "bye",
    "cabinet",
    "cable",
    "cake",
    "calculate",
    "calculation",
    "call",
    "called",
    "calm",
    "calmly",
    "camera",
    "camp",
    "campaign",
    "camping",
    "cancel",
    "cancer",
    "candidate",
    "candy",
    "cannot",
    "cap",
    "capable",
    "capacity",
    "capital",
    "captain",
    "capture",
    "car",
    "card",
    "cardboard",
    "care",
    "career",
    "careful",
    "carefully",
    "careless",
    "carelessly",
    "carpet",
    "carrot",
    "carry",
    "case",
    "cash",
    "cast",
    "castle",
    "cat",
    "catch",
    "category",
    "cause",
    "cd",
    "cease",
    "ceiling",
    "celebrate",
    "celebration",
    "cell",
    "cent",
    "centimetre",
    "central",
    "centre",
    "century",
    "ceremony",
    "certain",
    "certainly",
    "certificate",
    "chain",
    "chair",
    "chairman",
    "chairwoman",
    "challenge",
    "chamber",
    "chance",
    "change",
    "channel",
    "chapter",
    "character",
    "characteristic",
    "charge",
    "charity",
    "chart",
    "chase",
    "chat",
    "cheap",
    "cheaply",
    "cheat",
    "check",
    "cheek",
    "cheerful",
    "cheerfully",
    "cheese",
    "chemical",
    "chemist",
    "chemistry",
    "cheque",
    "chest",
    "chew",
    "chicken",
    "chief",
    "child",
    "chin",
    "chip",
    "chocolate",
    "choice",
    "choose",
    "chop",
    "church",
    "cigarette",
    "cinema",
    "circle",
    "circumstance",
    "citizen",
    "city",
    "civil",
    "claim",
    "clap",
    "class",
    "classic",
    "classroom",
    "clean",
    "clear",
    "clearly",
    "clerk",
    "clever",
    "click",
    "client",
    "climate",
    "climb",
    "climbing",
    "clock",
    "closed",
    "closely",
    "closet",
    "cloth",
    "clothes",
    "clothing",
    "cloud",
    "club",
    "coach",
    "coal",
    "coast",
    "coat",
    "code",
    "coffee",
    "coin",
    "cold",
    "coldly",
    "collapse",
    "colleague",
    "collect",
    "collection",
    "college",
    "colour",
    "coloured",
    "column",
    "combination",
    "combine",
    "come",
    "comedy",
    "comfort",
    "comfortable",
    "comfortably",
    "command",
    "comment",
    "commercial",
    "commission",
    "commit",
    "commitment",
    "committee",
    "common",
    "commonly",
    "communicate",
    "communication",
    "community",
    "company",
    "compare",
    "comparison",
    "compete",
    "competition",
    "competitive",
    "complain",
    "complaint",
    "complete",
    "completely",
    "complex",
    "complicate",
    "complicated",
    "computer",
    "concentrate",
    "concentration",
    "concept",
    "concern",
    "concerned",
    "concerning",
    "concert",
    "conclude",
    "conclusion",
    "concrete",
    "condition",
    "conduct",
    "conduct",
    "conference",
    "confidence",
    "confident",
    "confidently",
    "confine",
    "confined",
    "confirm",
    "conflict",
    "conflict",
    "confront",
    "confuse",
    "confused",
    "confusing",
    "confusion",
    "congratulate",
    "congratulation",
    "congress",
    "connect",
    "connected",
    "connection",
    "conscious",
    "consequence",
    "conservative",
    "consider",
    "considerable",
    "considerably",
    "consideration",
    "consist",
    "constant",
    "constantly",
    "construct",
    "construction",
    "consult",
    "consumer",
    "contact",
    "contain",
    "container",
    "contemporary",
    "contest",
    "context",
    "continent",
    "continue",
    "continuous",
    "continuously",
    "contract",
    "contract",
    "contrast",
    "contrast",
    "contrasting",
    "contribute",
    "contribution",
    "control",
    "controlled",
    "convenient",
    "convention",
    "conventional",
    "conversation",
    "convert",
    "convince",
    "cook",
    "cooker",
    "cookie",
    "cooking",
    "cool",
    "cope",
    "copy",
    "core",
    "corner",
    "correct",
    "correctly",
    "cost",
    "cottage",
    "cotton",
    "cough",
    "coughing",
    "could",
    "council",
    "count",
    "counter",
    "country",
    "countryside",
    "county",
    "couple",
    "courage",
    "course",
    "court",
    "cousin",
    "cover",
    "covered",
    "covering",
    "cow",
    "crack",
    "cracked",
    "craft",
    "crash",
    "crazy",
    "cream",
    "create",
    "creature",
    "credit",
    "crime",
    "criminal",
    "crisis",
    "crisp",
    "criterion",
    "critical",
    "criticism",
    "criticize",
    "crop",
    "cross",
    "crucial",
    "cruel",
    "crush",
    "cry",
    "cultural",
    "culture",
    "cup",
    "cupboard",
    "curb",
    "cure",
    "curious",
    "curiously",
    "curl",
    "curly",
    "current",
    "currently",
    "curtain",
    "curve",
    "curved",
    "custom",
    "customer",
    "customs",
    "cut",
    "cycle",
    "cycling",
    "dad",
    "daily",
    "damage",
    "damp",
    "dance",
    "dancer",
    "dancing",
    "danger",
    "dangerous",
    "dare",
    "dark",
    "data",
    "date",
    "daughter",
    "day",
    "dead",
    "deaf",
    "deal",
    "dear",
    "death",
    "debate",
    "debt",
    "decade",
    "decay",
    "december",
    "decide",
    "decision",
    "declare",
    "decline",
    "decorate",
    "decoration",
    "decorative",
    "decrease",
    "decrease",
    "deep",
    "deeply",
    "defeat",
    "defence",
    "defend",
    "define",
    "definite",
    "definitely",
    "definition",
    "degree",
    "delay",
    "deliberate",
    "deliberately",
    "delicate",
    "delight",
    "delighted",
    "deliver",
    "delivery",
    "demand",
    "demonstrate",
    "dentist",
    "deny",
    "department",
    "departure",
    "depend",
    "deposit",
    "depress",
    "depressed",
    "depressing",
    "depth",
    "derive",
    "describe",
    "description",
    "desert",
    "desert",
    "deserted",
    "deserve",
    "design",
    "desire",
    "desk",
    "desperate",
    "desperately",
    "despite",
    "destroy",
    "destruction",
    "detail",
    "detailed",
    "determination",
    "determine",
    "determined",
    "develop",
    "development",
    "device",
    "devote",
    "devoted",
    "diagram",
    "diamond",
    "diary",
    "dictionary",
    "die",
    "diet",
    "difference",
    "different",
    "differently",
    "difficult",
    "difficulty",
    "dig",
    "digital",
    "dinner",
    "direct",
    "direction",
    "directly",
    "director",
    "dirt",
    "dirty",
    "disabled",
    "disadvantage",
    "disagree",
    "disagreement",
    "disappear",
    "disappoint",
    "disappointed",
    "disappointing",
    "disappointment",
    "disapproval",
    "disapprove",
    "disapproving",
    "disaster",
    "disc",
    "discipline",
    "discount",
    "discover",
    "discovery",
    "discuss",
    "discussion",
    "disease",
    "disgust",
    "disgusted",
    "disgusting",
    "dish",
    "dishonest",
    "dishonestly",
    "disk",
    "dislike",
    "dismiss",
    "display",
    "dissolve",
    "distance",
    "distinguish",
    "distribute",
    "distribution",
    "district",
    "disturb",
    "disturbing",
    "divide",
    "division",
    "divorce",
    "divorced",
    "doctor",
    "document",
    "dog",
    "dollar",
    "domestic",
    "dominate",
    "door",
    "dot",
    "double",
    "doubt",
    "down",
    "downstairs",
    "downward",
    "downwards",
    "dozen",
    "draft",
    "drag",
    "drama",
    "dramatic",
    "dramatically",
    "draw",
    "drawer",
    "drawing",
    "dream",
    "dress",
    "dressed",
    "drink",
    "drive",
    "driver",
    "driving",
    "drop",
    "drug",
    "drugstore",
    "drum",
    "drunk",
    "dry",
    "due",
    "dull",
    "dump",
    "during",
    "dust",
    "duty",
    "dvd",
    "dying",
    "each",
    "ear",
    "early",
    "earn",
    "earth",
    "ease",
    "easily",
    "east",
    "eastern",
    "easy",
    "eat",
    "economic",
    "economy",
    "edge",
    "edition",
    "editor",
    "educate",
    "educated",
    "education",
    "effect",
    "effective",
    "effectively",
    "efficient",
    "efficiently",
    "effort",
    "e.g.",
    "egg",
    "eight",
    "eighteen",
    "eighteenth",
    "eighth",
    "eightieth",
    "eighty",
    "either",
    "elbow",
    "elderly",
    "elect",
    "election",
    "electric",
    "electrical",
    "electricity",
    "electronic",
    "elegant",
    "element",
    "elevator",
    "eleven",
    "eleventh",
    "else",
    "elsewhere",
    "email",
    "embarrass",
    "embarrassed",
    "embarrassing",
    "embarrassment",
    "emerge",
    "emergency",
    "emotion",
    "emotional",
    "emotionally",
    "emphasis",
    "emphasize",
    "empire",
    "employ",
    "employee",
    "employer",
    "employment",
    "empty",
    "enable",
    "encounter",
    "encourage",
    "encouragement",
    "end",
    "ending",
    "enemy",
    "energy",
    "engage",
    "engaged",
    "engine",
    "engineer",
    "engineering",
    "enjoy",
    "enjoyable",
    "enjoyment",
    "enormous",
    "enough",
    "enquiry",
    "ensure",
    "enter",
    "entertain",
    "entertainer",
    "entertaining",
    "entertainment",
    "enthusiasm",
    "enthusiastic",
    "enthusiastically",
    "entire",
    "entirely",
    "entitle",
    "entry",
    "envelope",
    "environment",
    "environmental",
    "equal",
    "equally",
    "equipment",
    "equivalent",
    "error",
    "escape",
    "especially",
    "essay",
    "essential",
    "essentially",
    "establish",
    "estate",
    "estimate",
    "estimate",
    "etc.",
    "euro",
    "even",
    "evening",
    "event",
    "eventually",
    "ever",
    "every",
    "everybody",
    "everyone",
    "everything",
    "everywhere",
    "evidence",
    "evil",
    "ex-",
    "exact",
    "exactly",
    "exaggerate",
    "exaggerated",
    "exam",
    "examination",
    "examine",
    "example",
    "excellent",
    "except",
    "exception",
    "exchange",
    "excite",
    "excited",
    "excitement",
    "exciting",
    "exclude",
    "excluding",
    "excuse",
    "excuse",
    "executive",
    "exercise",
    "exhibit",
    "exhibition",
    "exist",
    "existence",
    "exit",
    "expand",
    "expect",
    "expectation",
    "expected",
    "expense",
    "expensive",
    "experience",
    "experienced",
    "experiment",
    "expert",
    "explain",
    "explanation",
    "explode",
    "explore",
    "explosion",
    "export",
    "export",
    "expose",
    "express",
    "expression",
    "extend",
    "extension",
    "extensive",
    "extent",
    "extra",
    "extraordinary",
    "extreme",
    "extremely",
    "eye",
    "face",
    "facility",
    "fact",
    "factor",
    "factory",
    "fail",
    "failure",
    "faint",
    "faintly",
    "fair",
    "fairly",
    "faith",
    "faithful",
    "faithfully",
    "fall",
    "false",
    "fame",
    "familiar",
    "family",
    "famous",
    "fan",
    "fancy",
    "far",
    "farm",
    "farmer",
    "farming",
    "farther",
    "farthest",
    "fashion",
    "fashionable",
    "fast",
    "fasten",
    "fat",
    "father",
    "faucet",
    "fault",
    "favour",
    "favourite",
    "fear",
    "feather",
    "feature",
    "february",
    "federal",
    "fee",
    "feed",
    "feel",
    "feeling",
    "fellow",
    "female",
    "fence",
    "festival",
    "fetch",
    "fever",
    "few",
    "field",
    "fifteen",
    "fifteenth",
    "fifth",
    "fiftieth",
    "fifty",
    "fight",
    "fighting",
    "figure",
    "file",
    "fill",
    "film",
    "final",
    "finally",
    "finance",
    "financial",
    "find",
    "fine",
    "finely",
    "finger",
    "finish",
    "finished",
    "fire",
    "firm",
    "firmly",
    "first",
    "fish",
    "fishing",
    "fit",
    "five",
    "fix",
    "fixed",
    "flag",
    "flame",
    "flash",
    "flat",
    "flavour",
    "flesh",
    "flight",
    "float",
    "flood",
    "flooded",
    "flooding",
    "floor",
    "flour",
    "flow",
    "flower",
    "flu",
    "fly",
    "flying",
    "focus",
    "fold",
    "folding",
    "follow",
    "following",
    "food",
    "foot",
    "football",
    "for",
    "force",
    "forecast",
    "foreign",
    "forest",
    "forever",
    "forget",
    "forgive",
    "fork",
    "form",
    "formal",
    "formally",
    "former",
    "formerly",
    "formula",
    "fortieth",
    "fortune",
    "forty",
    "forward",
    "found",
    "foundation",
    "four",
    "fourteen",
    "fourteenth",
    "fourth",
    "frame",
    "free",
    "freedom",
    "freely",
    "freeze",
    "frequent",
    "frequently",
    "fresh",
    "freshly",
    "friday",
    "fridge",
    "friend",
    "friendly",
    "friendship",
    "frighten",
    "frightened",
    "frightening",
    "from",
    "front",
    "frozen",
    "fruit",
    "fry",
    "fuel",
    "full",
    "fully",
    "fun",
    "function",
    "fund",
    "fundamental",
    "funeral",
    "funny",
    "fur",
    "furniture",
    "further",
    "future",
    "gain",
    "gallon",
    "gamble",
    "gambling",
    "game",
    "gap",
    "garage",
    "garbage",
    "garden",
    "gas",
    "gasoline",
    "gate",
    "gather",
    "gear",
    "general",
    "generally",
    "generate",
    "generation",
    "generous",
    "generously",
    "gentle",
    "gentleman",
    "gently",
    "genuine",
    "genuinely",
    "geography",
    "get",
    "giant",
    "gift",
    "girl",
    "girlfriend",
    "give",
    "glad",
    "glass",
    "global",
    "glove",
    "glue",
    "go",
    "goal",
    "god",
    "gold",
    "good",
    "goodbye",
    "goods",
    "govern",
    "government",
    "governor",
    "grab",
    "grade",
    "gradual",
    "gradually",
    "grain",
    "gram",
    "grammar",
    "grand",
    "grandchild",
    "granddaughter",
    "grandfather",
    "grandmother",
    "grandparent",
    "grandson",
    "grant",
    "grass",
    "grateful",
    "gravely",
    "great",
    "greatly",
    "green",
    "grey",
    "grocery",
    "ground",
    "group",
    "guarantee",
    "guard",
    "guess",
    "guest",
    "guide",
    "guilty",
    "gun",
    "guy",
    "habit",
    "hair",
    "hairdresser",
    "half",
    "hall",
    "hammer",
    "hand",
    "handle",
    "hang",
    "happen",
    "happily",
    "happiness",
    "happy",
    "hard",
    "hardly",
    "harm",
    "harmful",
    "harmless",
    "hat",
    "hate",
    "hatred",
    "have",
    "he",
    "head",
    "headache",
    "heal",
    "health",
    "healthy",
    "hear",
    "hearing",
    "heart",
    "heat",
    "heating",
    "heaven",
    "heavily",
    "heavy",
    "heel",
    "height",
    "hell",
    "hello",
    "help",
    "helpful",
    "hence",
    "her",
    "here",
    "hero",
    "hers",
    "herself",
    "hesitate",
    "hi",
    "hide",
    "high",
    "highlight",
    "highly",
    "highway",
    "hill",
    "him",
    "himself",
    "hip",
    "hire",
    "his",
    "historical",
    "history",
    "hit",
    "hobby",
    "hold",
    "hole",
    "holiday",
    "hollow",
    "holy",
    "home",
    "homework",
    "honest",
    "honestly",
    "honour",
    "hook",
    "hope",
    "horizontal",
    "horn",
    "horror",
    "horse",
    "hospital",
    "host",
    "hot",
    "hotel",
    "hour",
    "house",
    "household",
    "housing",
    "how",
    "however",
    "huge",
    "human",
    "humorous",
    "humour",
    "hundred",
    "hundredth",
    "hungry",
    "hunt",
    "hunting",
    "hurry",
    "hurt",
    "husband",
    "i",
    "ice",
    "idea",
    "ideal",
    "identify",
    "identity",
    "i.e.",
    "if",
    "ignore",
    "ill",
    "illegal",
    "illegally",
    "illness",
    "illustrate",
    "image",
    "imaginary",
    "imagination",
    "imagine",
    "immediate",
    "immediately",
    "immoral",
    "impact",
    "impatient",
    "implication",
    "imply",
    "import",
    "import",
    "importance",
    "important",
    "importantly",
    "impose",
    "impossible",
    "impress",
    "impressed",
    "impression",
    "impressive",
    "improve",
    "improvement",
    "in",
    "inability",
    "inch",
    "incident",
    "include",
    "including",
    "income",
    "increase",
    "increase",
    "increasingly",
    "indeed",
    "independence",
    "independent",
    "independently",
    "index",
    "indicate",
    "indication",
    "indirect",
    "indirectly",
    "individual",
    "indoor",
    "indoors",
    "industrial",
    "industry",
    "inevitable",
    "inevitably",
    "infect",
    "infected",
    "infection",
    "infectious",
    "influence",
    "inform",
    "informal",
    "information",
    "ingredient",
    "initial",
    "initially",
    "initiative",
    "injure",
    "injured",
    "injury",
    "ink",
    "inner",
    "innocent",
    "insect",
    "insert",
    "inside",
    "insist",
    "install",
    "instance",
    "instead",
    "institute",
    "institution",
    "instruction",
    "instrument",
    "insult",
    "insult",
    "insulting",
    "insurance",
    "intelligence",
    "intelligent",
    "intend",
    "intended",
    "intention",
    "interest",
    "interested",
    "interesting",
    "interior",
    "internal",
    "international",
    "internet",
    "interpret",
    "interpretation",
    "interrupt",
    "interruption",
    "interval",
    "interview",
    "into",
    "introduce",
    "introduction",
    "invent",
    "invention",
    "invest",
    "investigate",
    "investigation",
    "investment",
    "invitation",
    "invite",
    "involve",
    "involved",
    "involvement",
    "iron",
    "irritate",
    "irritated",
    "irritating",
    "island",
    "issue",
    "it",
    "item",
    "its",
    "itself",
    "jacket",
    "jam",
    "january",
    "jealous",
    "jeans",
    "jelly",
    "jewellery",
    "job",
    "join",
    "joint",
    "jointly",
    "joke",
    "journalist",
    "journey",
    "joy",
    "judge",
    "judgement",
    "juice",
    "july",
    "jump",
    "june",
    "junior",
    "just",
    "justice",
    "justified",
    "justify",
    "keen",
    "keep",
    "key",
    "keyboard",
    "kick",
    "kid",
    "kill",
    "killing",
    "kilogram",
    "kilometre",
    "kind",
    "kindly",
    "kindness",
    "king",
    "kiss",
    "kitchen",
    "knee",
    "knife",
    "knit",
    "knitted",
    "knitting",
    "knock",
    "knot",
    "know",
    "knowledge",
    "lab",
    "label",
    "laboratory",
    "labour",
    "lack",
    "lacking",
    "lady",
    "lake",
    "lamp",
    "land",
    "landscape",
    "lane",
    "language",
    "large",
    "largely",
    "late",
    "later",
    "latest",
    "latter",
    "laugh",
    "launch",
    "law",
    "lawyer",
    "lay",
    "layer",
    "lazy",
    "leader",
    "leaf",
    "league",
    "lean",
    "learn",
    "least",
    "leather",
    "leave",
    "lecture",
    "left",
    "leg",
    "legal",
    "legally",
    "lemon",
    "lend",
    "length",
    "less",
    "lesson",
    "let",
    "letter",
    "level",
    "library",
    "licence",
    "license",
    "lid",
    "life",
    "lift",
    "light",
    "lightly",
    "like",
    "likely",
    "limit",
    "limited",
    "line",
    "link",
    "lip",
    "liquid",
    "list",
    "listen",
    "literature",
    "litre",
    "little",
    "lively",
    "living",
    "load",
    "loan",
    "local",
    "locally",
    "locate",
    "located",
    "location",
    "lock",
    "logic",
    "logical",
    "lonely",
    "long",
    "look",
    "loose",
    "loosely",
    "lord",
    "lorry",
    "lose",
    "loss",
    "lost",
    "lot",
    "loud",
    "loudly",
    "love",
    "lovely",
    "lover",
    "low",
    "loyal",
    "luck",
    "lucky",
    "luggage",
    "lump",
    "lunch",
    "lung",
    "machine",
    "machinery",
    "mad",
    "magazine",
    "magic",
    "mail",
    "main",
    "mainly",
    "maintain",
    "major",
    "majority",
    "make",
    "make-up",
    "male",
    "mall",
    "man",
    "manage",
    "management",
    "manager",
    "manner",
    "manufacture",
    "manufacturer",
    "manufacturing",
    "many",
    "map",
    "march",
    "march",
    "mark",
    "market",
    "marketing",
    "marriage",
    "married",
    "marry",
    "mass",
    "massive",
    "master",
    "match",
    "matching",
    "mate",
    "material",
    "mathematics",
    "matter",
    "maximum",
    "may",
    "may",
    "maybe",
    "mayor",
    "me",
    "meal",
    "mean",
    "meaning",
    "means",
    "meanwhile",
    "measure",
    "measurement",
    "meat",
    "media",
    "medical",
    "medicine",
    "medium",
    "meet",
    "meeting",
    "melt",
    "member",
    "membership",
    "memory",
    "mental",
    "mentally",
    "mention",
    "menu",
    "mere",
    "merely",
    "mess",
    "message",
    "metal",
    "method",
    "metre",
    "mid-",
    "midday",
    "middle",
    "midnight",
    "might",
    "mild",
    "mile",
    "military",
    "milk",
    "milligram",
    "millimetre",
    "million",
    "millionth",
    "mind",
    "mine",
    "mineral",
    "minimum",
    "minister",
    "ministry",
    "minor",
    "minority",
    "mirror",
    "miss",
    "missing",
    "mistake",
    "mistaken",
    "mix",
    "mixed",
    "mixture",
    "mobile",
    "model",
    "modern",
    "mom",
    "moment",
    "monday",
    "money",
    "monitor",
    "month",
    "mood",
    "moon",
    "moral",
    "morally",
    "more",
    "moreover",
    "morning",
    "most",
    "mostly",
    "mother",
    "motion",
    "motor",
    "motorbike",
    "motorcycle",
    "mount",
    "mountain",
    "mouse",
    "mouth",
    "move",
    "movement",
    "movie",
    "moving",
    "mr",
    "mrs",
    "ms",
    "much",
    "mud",
    "multiply",
    "mum",
    "murder",
    "muscle",
    "museum",
    "music",
    "musical",
    "musician",
    "must",
    "my",
    "myself",
    "mysterious",
    "mystery",
    "nail",
    "naked",
    "name",
    "nation",
    "national",
    "natural",
    "naturally",
    "nature",
    "navy",
    "near",
    "nearby",
    "nearly",
    "neat",
    "neatly",
    "necessarily",
    "necessary",
    "neck",
    "need",
    "needle",
    "negative",
    "neighbour",
    "neighbourhood",
    "neither",
    "nephew",
    "nerve",
    "nervous",
    "nervously",
    "nest",
    "net",
    "network",
    "never",
    "nevertheless",
    "new",
    "newly",
    "news",
    "newspaper",
    "next",
    "nice",
    "nicely",
    "niece",
    "night",
    "nine",
    "nineteen",
    "nineteenth",
    "ninetieth",
    "ninety",
    "ninth",
    "no",
    "nobody",
    "noise",
    "noisily",
    "noisy",
    "non-",
    "none",
    "nonsense",
    "nor",
    "normal",
    "normally",
    "north",
    "northern",
    "nose",
    "not",
    "note",
    "nothing",
    "notice",
    "noticeable",
    "novel",
    "november",
    "now",
    "nowhere",
    "nuclear",
    "number",
    "nurse",
    "nut",
    "obey",
    "object",
    "object",
    "objective",
    "observation",
    "observe",
    "obtain",
    "obvious",
    "obviously",
    "occasion",
    "occasionally",
    "occupied",
    "occupy",
    "occur",
    "ocean",
    "o&#x2019;clock",
    "october",
    "odd",
    "oddly",
    "of",
    "off",
    "offence",
    "offend",
    "offense",
    "offensive",
    "offer",
    "office",
    "officer",
    "official",
    "officially",
    "often",
    "oh",
    "oil",
    "ok",
    "old",
    "old-fashioned",
    "on",
    "once",
    "one",
    "onion",
    "online",
    "only",
    "onto",
    "open",
    "opening",
    "openly",
    "operate",
    "operation",
    "opinion",
    "opponent",
    "opportunity",
    "oppose",
    "opposed",
    "opposing",
    "opposite",
    "opposition",
    "option",
    "or",
    "orange",
    "order",
    "ordinary",
    "organ",
    "organization",
    "organize",
    "organized",
    "origin",
    "original",
    "originally",
    "other",
    "otherwise",
    "our",
    "ours",
    "ourselves",
    "out",
    "outdoor",
    "outdoors",
    "outer",
    "outline",
    "output",
    "outside",
    "outside",
    "outstanding",
    "oven",
    "over",
    "overall",
    "overall",
    "overcome",
    "owe",
    "own",
    "owner",
    "pack",
    "package",
    "packaging",
    "packet",
    "page",
    "pain",
    "painful",
    "paint",
    "painter",
    "painting",
    "pair",
    "palace",
    "pale",
    "panel",
    "pants",
    "paper",
    "parallel",
    "parent",
    "park",
    "parliament",
    "part",
    "particular",
    "particularly",
    "partly",
    "partner",
    "partnership",
    "party",
    "pass",
    "passage",
    "passenger",
    "passing",
    "passport",
    "past",
    "path",
    "patience",
    "patient",
    "pattern",
    "pause",
    "pay",
    "payment",
    "peace",
    "peaceful",
    "peak",
    "pen",
    "pencil",
    "penny",
    "people",
    "pepper",
    "per",
    "perfect",
    "perfectly",
    "perform",
    "performance",
    "performer",
    "perhaps",
    "period",
    "permanent",
    "permanently",
    "permission",
    "permit",
    "person",
    "personal",
    "personality",
    "personally",
    "persuade",
    "pet",
    "petrol",
    "phase",
    "philosophy",
    "phone",
    "photo",
    "photocopy",
    "photograph",
    "photographer",
    "photography",
    "phrase",
    "physical",
    "physically",
    "physics",
    "piano",
    "pick",
    "picture",
    "piece",
    "pig",
    "pile",
    "pill",
    "pilot",
    "pin",
    "pink",
    "pint",
    "pipe",
    "pitch",
    "pity",
    "place",
    "plain",
    "plan",
    "plane",
    "planet",
    "planning",
    "plant",
    "plastic",
    "plate",
    "platform",
    "play",
    "player",
    "pleasant",
    "pleasantly",
    "please",
    "pleased",
    "pleasing",
    "pleasure",
    "plenty",
    "plot",
    "plug",
    "p.m.",
    "pocket",
    "poem",
    "poetry",
    "point",
    "pointed",
    "poison",
    "poisonous",
    "pole",
    "police",
    "policy",
    "polish",
    "polite",
    "politely",
    "political",
    "politically",
    "politician",
    "politics",
    "pollution",
    "pool",
    "poor",
    "pop",
    "popular",
    "population",
    "port",
    "pose",
    "position",
    "positive",
    "possess",
    "possession",
    "possibility",
    "possible",
    "possibly",
    "post",
    "pot",
    "potato",
    "potential",
    "potentially",
    "pound",
    "pour",
    "powder",
    "power",
    "powerful",
    "practical",
    "practically",
    "practice",
    "practise",
    "praise",
    "pray",
    "prayer",
    "precise",
    "precisely",
    "predict",
    "prefer",
    "preference",
    "pregnant",
    "premises",
    "preparation",
    "prepare",
    "prepared",
    "presence",
    "present",
    "present",
    "presentation",
    "preserve",
    "president",
    "press",
    "pressure",
    "presumably",
    "pretend",
    "pretty",
    "prevent",
    "previous",
    "previously",
    "price",
    "pride",
    "priest",
    "primarily",
    "primary",
    "prince",
    "princess",
    "principle",
    "print",
    "printer",
    "printing",
    "prior",
    "priority",
    "prison",
    "prisoner",
    "private",
    "privately",
    "prize",
    "probable",
    "probably",
    "problem",
    "procedure",
    "proceed",
    "produce",
    "producer",
    "product",
    "production",
    "profession",
    "professional",
    "professor",
    "profit",
    "program",
    "programme",
    "progress",
    "progress",
    "project",
    "project",
    "promise",
    "promote",
    "promotion",
    "prompt",
    "promptly",
    "pronounce",
    "pronunciation",
    "proof",
    "proper",
    "properly",
    "property",
    "proportion",
    "proposal",
    "propose",
    "prospect",
    "protect",
    "protection",
    "protest",
    "protest",
    "proud",
    "proudly",
    "prove",
    "provide",
    "provided",
    "providing",
    "pub",
    "public",
    "publication",
    "publicity",
    "publicly",
    "publish",
    "publishing",
    "pull",
    "punch",
    "punish",
    "punishment",
    "pupil",
    "purchase",
    "pure",
    "purely",
    "purple",
    "purpose",
    "pursue",
    "push",
    "put",
    "qualification",
    "qualified",
    "qualify",
    "quality",
    "quantity",
    "quarter",
    "queen",
    "question",
    "quick",
    "quickly",
    "quiet",
    "quietly",
    "quit",
    "quite",
    "quote",
    "race",
    "racing",
    "radio",
    "rail",
    "railroad",
    "railway",
    "rain",
    "raise",
    "range",
    "rank",
    "rapid",
    "rapidly",
    "rare",
    "rarely",
    "rate",
    "rather",
    "raw",
    "re-",
    "reach",
    "react",
    "reaction",
    "read",
    "reader",
    "reading",
    "ready",
    "real",
    "realistic",
    "reality",
    "realize",
    "really",
    "rear",
    "reason",
    "reasonable",
    "reasonably",
    "recall",
    "receipt",
    "receive",
    "recent",
    "recently",
    "reception",
    "reckon",
    "recognition",
    "recognize",
    "recommend",
    "record",
    "record",
    "recording",
    "recover",
    "red",
    "reduce",
    "reduction",
    "refer",
    "reference",
    "reflect",
    "reform",
    "refrigerator",
    "refusal",
    "regard",
    "regarding",
    "region",
    "regional",
    "register",
    "regret",
    "regular",
    "regularly",
    "regulation",
    "reject",
    "relate",
    "related",
    "relation",
    "relationship",
    "relative",
    "relatively",
    "relax",
    "relaxed",
    "relaxing",
    "release",
    "relevant",
    "relief",
    "religion",
    "religious",
    "rely",
    "remain",
    "remaining",
    "remains",
    "remark",
    "remarkable",
    "remarkably",
    "remember",
    "remind",
    "remote",
    "removal",
    "remove",
    "rent",
    "rented",
    "repair",
    "repeat",
    "repeated",
    "repeatedly",
    "replace",
    "reply",
    "report",
    "represent",
    "representative",
    "reproduce",
    "reputation",
    "request",
    "require",
    "requirement",
    "rescue",
    "research",
    "research",
    "reservation",
    "reserve",
    "resident",
    "resist",
    "resistance",
    "resolve",
    "resort",
    "resource",
    "respect",
    "respond",
    "response",
    "responsibility",
    "responsible",
    "rest",
    "restaurant",
    "restore",
    "restrict",
    "restricted",
    "restriction",
    "result",
    "retain",
    "retire",
    "retired",
    "retirement",
    "return",
    "reveal",
    "reverse",
    "review",
    "revise",
    "revision",
    "revolution",
    "reward",
    "rhythm",
    "rice",
    "rich",
    "rid",
    "ride",
    "rider",
    "ridiculous",
    "riding",
    "right",
    "rightly",
    "rise",
    "risk",
    "rival",
    "river",
    "road",
    "rob",
    "rock",
    "role",
    "roll",
    "romantic",
    "roof",
    "room",
    "root",
    "rope",
    "rough",
    "roughly",
    "round",
    "rounded",
    "route",
    "routine",
    "royal",
    "rub",
    "rubber",
    "rubbish",
    "rude",
    "rudely",
    "ruin",
    "ruined",
    "rule",
    "ruler",
    "rumour",
    "run",
    "runner",
    "running",
    "rural",
    "rush",
    "sack",
    "sad",
    "sadly",
    "sadness",
    "safe",
    "safely",
    "safety",
    "sail",
    "sailing",
    "sailor",
    "salad",
    "salary",
    "sale",
    "salt",
    "salty",
    "same",
    "sample",
    "sand",
    "satisfaction",
    "satisfied",
    "satisfy",
    "satisfying",
    "saturday",
    "sauce",
    "save",
    "saving",
    "say",
    "scale",
    "scare",
    "scared",
    "scene",
    "schedule",
    "scheme",
    "school",
    "science",
    "scientific",
    "scientist",
    "scissors",
    "score",
    "scratch",
    "scream",
    "screen",
    "screw",
    "sea",
    "seal",
    "search",
    "season",
    "seat",
    "secondary",
    "secret",
    "secretary",
    "secretly",
    "section",
    "sector",
    "secure",
    "security",
    "see",
    "seed",
    "seek",
    "seem",
    "select",
    "selection",
    "self",
    "self-",
    "sell",
    "senate",
    "senator",
    "send",
    "senior",
    "sense",
    "sensible",
    "sensitive",
    "sentence",
    "separate",
    "separate",
    "separated",
    "separately",
    "separation",
    "september",
    "series",
    "serious",
    "seriously",
    "servant",
    "serve",
    "service",
    "session",
    "set",
    "settle",
    "seven",
    "seventeen",
    "seventh",
    "seventieth",
    "seventy",
    "several",
    "severe",
    "severely",
    "sew",
    "sewing",
    "sex",
    "sexual",
    "sexually",
    "shade",
    "shadow",
    "shake",
    "shall",
    "shallow",
    "shame",
    "shape",
    "shaped",
    "share",
    "sharp",
    "sharply",
    "shave",
    "she",
    "sheep",
    "sheet",
    "shelf",
    "shell",
    "shelter",
    "shift",
    "shine",
    "shiny",
    "ship",
    "shirt",
    "shock",
    "shocked",
    "shocking",
    "shoe",
    "shoot",
    "shooting",
    "shop",
    "shopping",
    "short",
    "shortly",
    "shot",
    "should",
    "shoulder",
    "shout",
    "show",
    "shower",
    "shut",
    "shy",
    "sick",
    "side",
    "sideways",
    "sight",
    "sign",
    "signal",
    "signature",
    "significant",
    "significantly",
    "silence",
    "silent",
    "silk",
    "silly",
    "silver",
    "similar",
    "similarly",
    "simple",
    "simply",
    "since",
    "sincere",
    "sincerely",
    "sing",
    "singer",
    "singing",
    "single",
    "sink",
    "sir",
    "sister",
    "sit",
    "site",
    "situation",
    "six",
    "sixteen",
    "sixth",
    "sixtieth",
    "sixty",
    "size",
    "skilful",
    "skilfully",
    "skill",
    "skilled",
    "skin",
    "skirt",
    "sky",
    "sleep",
    "sleeve",
    "slice",
    "slide",
    "slight",
    "slightly",
    "slip",
    "slope",
    "slow",
    "slowly",
    "small",
    "smart",
    "smash",
    "smell",
    "smile",
    "smoke",
    "smoking",
    "smooth",
    "smoothly",
    "snake",
    "snow",
    "so",
    "soap",
    "social",
    "socially",
    "society",
    "sock",
    "soft",
    "softly",
    "software",
    "soil",
    "soldier",
    "solid",
    "solution",
    "solve",
    "some",
    "some",
    "somebody",
    "somehow",
    "someone",
    "something",
    "sometimes",
    "somewhat",
    "somewhere",
    "son",
    "song",
    "soon",
    "sore",
    "sorry",
    "sort",
    "soul",
    "sound",
    "soup",
    "sour",
    "source",
    "south",
    "southern",
    "space",
    "spare",
    "speak",
    "speaker",
    "special",
    "specialist",
    "specially",
    "specific",
    "specifically",
    "speech",
    "speed",
    "spell",
    "spelling",
    "spend",
    "spice",
    "spicy",
    "spider",
    "spin",
    "spirit",
    "spiritual",
    "spite",
    "split",
    "spoil",
    "spoken",
    "spoon",
    "sport",
    "spot",
    "spray",
    "spread",
    "spring",
    "square",
    "squeeze",
    "stable",
    "staff",
    "stage",
    "stair",
    "stamp",
    "stand",
    "standard",
    "star",
    "stare",
    "start",
    "state",
    "statement",
    "station",
    "statue",
    "status",
    "stay",
    "steadily",
    "steady",
    "steal",
    "steam",
    "steel",
    "steep",
    "steeply",
    "steer",
    "step",
    "stick",
    "sticky",
    "stiff",
    "stiffly",
    "still",
    "sting",
    "stir",
    "stock",
    "stomach",
    "stone",
    "stop",
    "store",
    "storm",
    "story",
    "stove",
    "straight",
    "strain",
    "strange",
    "strangely",
    "stranger",
    "strategy",
    "stream",
    "street",
    "strength",
    "stress",
    "stressed",
    "stretch",
    "strict",
    "strictly",
    "strike",
    "striking",
    "string",
    "strip",
    "stripe",
    "striped",
    "stroke",
    "strong",
    "strongly",
    "structure",
    "struggle",
    "student",
    "studio",
    "study",
    "stuff",
    "stupid",
    "style",
    "subject",
    "substance",
    "substantial",
    "substantially",
    "substitute",
    "succeed",
    "success",
    "successful",
    "successfully",
    "such",
    "suck",
    "sudden",
    "suddenly",
    "suffer",
    "suffering",
    "sufficient",
    "sufficiently",
    "sugar",
    "suggest",
    "suggestion",
    "suit",
    "suitable",
    "suitcase",
    "suited",
    "sum",
    "summary",
    "summer",
    "sun",
    "sunday",
    "superior",
    "supermarket",
    "supply",
    "support",
    "supporter",
    "suppose",
    "sure",
    "surely",
    "surface",
    "surname",
    "surprise",
    "surprised",
    "surprising",
    "surprisingly",
    "surround",
    "surrounding",
    "surroundings",
    "survey",
    "survey",
    "survive",
    "suspect",
    "suspect",
    "suspicion",
    "suspicious",
    "swallow",
    "swear",
    "swearing",
    "sweat",
    "sweater",
    "sweep",
    "sweet",
    "swell",
    "swelling",
    "swim",
    "swimming",
    "swing",
    "switch",
    "swollen",
    "symbol",
    "sympathetic",
    "sympathy",
    "system",
    "table",
    "tablet",
    "tackle",
    "tail",
    "take",
    "talk",
    "tall",
    "tank",
    "tap",
    "tape",
    "target",
    "task",
    "taste",
    "tax",
    "taxi",
    "tea",
    "teach",
    "teacher",
    "teaching",
    "team",
    "technical",
    "technique",
    "technology",
    "telephone",
    "television",
    "tell",
    "temperature",
    "temporarily",
    "temporary",
    "ten",
    "tend",
    "tendency",
    "tension",
    "tent",
    "tenth",
    "term",
    "terrible",
    "terribly",
    "test",
    "text",
    "than",
    "thank",
    "thanks",
    "that",
    "that",
    "the",
    "theatre",
    "their",
    "theirs",
    "them",
    "theme",
    "themselves",
    "then",
    "theory",
    "there",
    "therefore",
    "they",
    "thick",
    "thickly",
    "thickness",
    "thief",
    "thin",
    "thing",
    "think",
    "thinking",
    "third",
    "thirsty",
    "thirteen",
    "thirteenth",
    "thirtieth",
    "thirty",
    "this",
    "thorough",
    "thoroughly",
    "though",
    "thought",
    "thousand",
    "thousandth",
    "thread",
    "threat",
    "threaten",
    "threatening",
    "three",
    "throat",
    "through",
    "throughout",
    "thumb",
    "thursday",
    "thus",
    "ticket",
    "tidy",
    "tie",
    "tight",
    "tightly",
    "till",
    "time",
    "timetable",
    "tin",
    "tiny",
    "tip",
    "tire",
    "tired",
    "tiring",
    "title",
    "to",
    "today",
    "toe",
    "together",
    "toilet",
    "tomato",
    "ton",
    "tone",
    "tongue",
    "tonight",
    "tonne",
    "too",
    "tool",
    "tooth",
    "top",
    "topic",
    "total",
    "totally",
    "touch",
    "tough",
    "tour",
    "tourist",
    "towards",
    "towel",
    "tower",
    "town",
    "toy",
    "trace",
    "track",
    "trade",
    "trading",
    "tradition",
    "traditional",
    "traditionally",
    "traffic",
    "train",
    "training",
    "transfer",
    "transfer",
    "transform",
    "translate",
    "translation",
    "transparent",
    "transport",
    "transport",
    "transportation",
    "trap",
    "travel",
    "traveller",
    "treat",
    "treatment",
    "tree",
    "trend",
    "trial",
    "triangle",
    "trick",
    "trip",
    "tropical",
    "trouble",
    "trousers",
    "truck",
    "true",
    "truly",
    "trust",
    "truth",
    "try",
    "tube",
    "tuesday",
    "tune",
    "tunnel",
    "turn",
    "tv",
    "twelfth",
    "twelve",
    "twentieth",
    "twenty",
    "twice",
    "twin",
    "twist",
    "twisted",
    "two",
    "type",
    "typical",
    "typically",
    "tyre",
    "ugly",
    "ultimate",
    "ultimately",
    "umbrella",
    "unable",
    "unacceptable",
    "uncertain",
    "uncle",
    "uncomfortable",
    "unconscious",
    "uncontrolled",
    "under",
    "underground",
    "underneath",
    "understand",
    "understanding",
    "underwater",
    "underwear",
    "undo",
    "unemployed",
    "unemployment",
    "unexpected",
    "unexpectedly",
    "unfair",
    "unfairly",
    "unfortunate",
    "unfortunately",
    "unfriendly",
    "unhappy",
    "uniform",
    "unimportant",
    "union",
    "unique",
    "unit",
    "unite",
    "united",
    "universe",
    "university",
    "unkind",
    "unknown",
    "unless",
    "unlike",
    "unlikely",
    "unload",
    "unlucky",
    "unnecessary",
    "unpleasant",
    "unreasonable",
    "unsteady",
    "unsuccessful",
    "untidy",
    "until",
    "unusual",
    "unusually",
    "unwilling",
    "unwillingly",
    "up",
    "upon",
    "upper",
    "upset",
    "upset",
    "upsetting",
    "upstairs",
    "upward",
    "upwards",
    "urban",
    "urge",
    "urgent",
    "us",
    "use",
    "use",
    "useful",
    "useless",
    "user",
    "usual",
    "usually",
    "vacation",
    "valid",
    "valley",
    "valuable",
    "value",
    "van",
    "variation",
    "varied",
    "variety",
    "various",
    "vary",
    "vast",
    "vegetable",
    "vehicle",
    "venture",
    "version",
    "vertical",
    "very",
    "via",
    "victim",
    "victory",
    "video",
    "view",
    "village",
    "violence",
    "violent",
    "violently",
    "virtually",
    "virus",
    "visible",
    "vision",
    "visit",
    "visitor",
    "vital",
    "vocabulary",
    "voice",
    "volume",
    "vote",
    "wage",
    "waist",
    "wait",
    "waiter",
    "wake",
    "walk",
    "walking",
    "wall",
    "wallet",
    "wander",
    "want",
    "war",
    "warm",
    "warmth",
    "warn",
    "warning",
    "wash",
    "washing",
    "waste",
    "watch",
    "water",
    "wave",
    "way",
    "we",
    "weak",
    "weakness",
    "wealth",
    "weapon",
    "wear",
    "weather",
    "web",
    "website",
    "wedding",
    "wednesday",
    "week",
    "weekend",
    "weekly",
    "weigh",
    "weight",
    "welcome",
    "well",
    "west",
    "western",
    "wet",
    "what",
    "whatever",
    "wheel",
    "when",
    "whenever",
    "where",
    "whereas",
    "wherever",
    "whether",
    "which",
    "while",
    "whisper",
    "whistle",
    "white",
    "who",
    "whoever",
    "whole",
    "whom",
    "whose",
    "why",
    "wide",
    "widely",
    "width",
    "wife",
    "wild",
    "wildly",
    "will",
    "willing",
    "willingly",
    "willingness",
    "win",
    "window",
    "wine",
    "wing",
    "winner",
    "winning",
    "winter",
    "wire",
    "wise",
    "wish",
    "with",
    "withdraw",
    "within",
    "without",
    "witness",
    "woman",
    "wonder",
    "wonderful",
    "wood",
    "wooden",
    "wool",
    "word",
    "work",
    "worker",
    "working",
    "world",
    "worried",
    "worry",
    "worrying",
    "worse",
    "worship",
    "worst",
    "worth",
    "would",
    "wounded",
    "wrap",
    "wrapping",
    "wrist",
    "write",
    "writer",
    "writing",
    "written",
    "wrong",
    "wrongly",
    "yard",
    "yawn",
    "yeah",
    "year",
    "yellow",
    "yes",
    "yesterday",
    "yet",
    "you",
    "young",
    "your",
    "yours",
    "yourself",
    "youth",
    "zero",
    "zone"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}]},["3yPwA","6rimH"], "6rimH", "parcelRequire94c2")

//# sourceMappingURL=index.8cfc62b9.js.map
